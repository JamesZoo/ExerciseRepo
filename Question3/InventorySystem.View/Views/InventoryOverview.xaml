<UserControl x:Class="InventorySystem.View.Views.InventoryOverview"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:InventorySystem.View.Views"
             xmlns:searchControl="clr-namespace:LiveSearchTextBoxControl;assembly=LiveSearchTextBoxControl"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <!-- This is the current way to setup your app's initial theme -->
        <materialDesign:BundledTheme BaseTheme="Inherit" PrimaryColor="Indigo" SecondaryColor="Lime"
                                       ColorAdjustment="{materialDesign:ColorAdjustment}" />

        <!-- If you would prefer to use your own colors there is an option for that as well -->
        <!--<materialDesign:CustomColorTheme BaseTheme="Light" PrimaryColor="Aqua" SecondaryColor="DarkGreen" />-->

        <!-- You can also use the built in theme dictionaries as well
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                -->

        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
      </ResourceDictionary.MergedDictionaries>
      
      <CollectionViewSource x:Key="InventoryDataGridViewSource" Source="{Binding Products}"/>

      <Style x:Key="InventoryDataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Style.Resources>
          <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="IsTabStop" Value="False" />
          </Style>
        </Style.Resources>
      
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="EnableRowVirtualization" Value="False"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>

  <Grid IsEnabled="{Binding IsReady}" Margin="10">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <Grid x:Name="headerRow"
          Grid.Row="0" Margin="0, 15">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width ="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width ="Auto"/>
        <ColumnDefinition Width ="Auto"/>
      </Grid.ColumnDefinitions>

      <TextBlock Grid.Column="0" Margin="0,0,0,10" Text="Inventory Overview" FontSize="24" VerticalAlignment="Top"/>

      <StackPanel x:Name="SearchPanel" Grid.Column="1" Orientation="Horizontal" Margin="0,0,30,0" VerticalAlignment="Bottom" HorizontalAlignment="Right">
        <TextBlock Text="Search:" FontSize="14" VerticalAlignment="Center"/>
        <searchControl:LiveSearchTextBox Margin="10,0,0,0"
                                         Width="150"
                                         VerticalAlignment="Center"
                                         HintText="Search Product"
                                         FontSize="14"
                                         Filter="LiveSearchTextBox_OnFilter"/>
      </StackPanel>

      <Button Grid.Column="2"
              Content="Order(New)"
              Height="30"
              Margin="0,0,5,0"
              VerticalAlignment="Bottom"
              VerticalContentAlignment="Center"
              FontSize="14"
              Command="{Binding NewOrderCommand}"/>

      <Button Grid.Column="3"
              Content="Order(Existing)"
              Height="30"
              VerticalAlignment="Bottom"
              VerticalContentAlignment="Center"
              FontSize="14"
              Command="{Binding UpdateOrderCommand}"/>
    </Grid>

    <DataGrid Grid.Row="1" 
              x:Name="InventoryDataGrid"
              Style="{StaticResource InventoryDataGridStyle}"
              ItemsSource="{Binding Source={StaticResource InventoryDataGridViewSource}}">

      <DataGrid.Resources>
        <Style TargetType="DataGridRow">
          <Setter Property="IsSelected" Value="{Binding IsSelected}" />
        </Style>
      </DataGrid.Resources>

      <DataGrid.Columns>
        <DataGridTemplateColumn MinWidth="20" >
          <DataGridTemplateColumn.Header>
            <CheckBox x:Name="SelectAllCheckBox" Checked="CheckBox_OnChecked" Unchecked="CheckBox_OnUnchecked" />
          </DataGridTemplateColumn.Header>
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Grid>
                <CheckBox VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding IsSelected}" IsHitTestVisible="False" />
              </Grid>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>

        <DataGridTextColumn Header="Product Name" Width="2*" CanUserSort="True" Binding="{Binding ProductName}"/>
        <DataGridTextColumn Header="Quantity" Width="Auto" CanUserSort="True" Binding="{Binding Quantity}"/>
        <DataGridTextColumn Header="NewValue" Width="*" CanUserSort="True" Binding="{Binding DisplayUnit}"/>
      </DataGrid.Columns>
    </DataGrid>
  </Grid>
</UserControl>
